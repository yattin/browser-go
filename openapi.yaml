openapi: 3.0.3
info:
  title: Browser-Go API
  description: Chrome DevTools Protocol (CDP) based browser management service with multi-user concurrent access and session management
  version: 1.0.1
  contact:
    name: Browser-Go
  license:
    name: MIT
servers:
  - url: http://localhost:3000
    description: Development server
paths:
  /api/v1/browser/stop:
    get:
      summary: Stop browser instance
      description: Stop a specific browser instance for a user
      parameters:
        - name: user_id
          in: query
          required: true
          description: User identifier for the browser instance to stop
          schema:
            type: string
            example: 'user123'
      responses:
        '200':
          description: Browser instance stopped successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  msg:
                    type: string
                    example: 'success'
        '400':
          description: Missing user_id parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                code: -1
                msg: 'Missing user_id parameter'
        '404':
          description: Browser instance not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                code: -1
                msg: 'Browser instance not found for this user_id'
        '500':
          description: Failed to close browser instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                code: -1
                msg: 'Failed to close browser instance'

  /api/v1/browser/list:
    get:
      summary: List all browser instances
      description: Get a list of all active browser instances with their status
      responses:
        '200':
          description: List of active browser instances
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  msg:
                    type: string
                    example: 'success'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/BrowserInstance'
                  stats:
                    $ref: '#/components/schemas/SystemStats'

  /api/v1/browser/stats:
    get:
      summary: Get system statistics
      description: Get current system status and capacity information
      responses:
        '200':
          description: System statistics
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  msg:
                    type: string
                    example: 'success'
                  data:
                    type: object
                    properties:
                      current_instances:
                        type: integer
                        description: Number of currently active instances
                        example: 3
                      max_instances:
                        type: integer
                        description: Maximum allowed concurrent instances
                        example: 10
                      available_slots:
                        type: integer
                        description: Number of available slots for new instances
                        example: 7
                      instance_timeout_ms:
                        type: integer
                        description: Instance timeout in milliseconds
                        example: 3600000
                      inactive_check_interval:
                        type: integer
                        description: Inactive instance check interval in milliseconds
                        example: 300000

components:
  schemas:
    BrowserInstance:
      type: object
      properties:
        user_id:
          type: string
          description: User identifier
          example: 'user123'
        last_activity:
          type: string
          format: date-time
          description: Last activity timestamp in ISO format
          example: '2024-01-15T10:30:00.000Z'
        idle_time_seconds:
          type: integer
          description: Idle time in seconds since last activity
          example: 1800

    SystemStats:
      type: object
      properties:
        current_instances:
          type: integer
          description: Number of currently active instances
          example: 3
        max_instances:
          type: integer
          description: Maximum allowed concurrent instances
          example: 10
        instance_timeout_ms:
          type: integer
          description: Instance timeout in milliseconds
          example: 3600000

    ErrorResponse:
      type: object
      properties:
        code:
          type: integer
          description: Error code (-1 for errors, 0 for success)
          example: -1
        msg:
          type: string
          description: Error message
          example: 'Error description'

    LaunchParameters:
      type: object
      description: Parameters for launching a browser instance via WebSocket
      properties:
        user:
          type: string
          description: User identifier for session persistence
          example: 'user123'
        args:
          type: array
          items:
            type: string
          description: Chrome launch arguments
          example: ['--window-size=1920,1080', '--lang=en-US']

  securitySchemes:
    TokenAuth:
      type: apiKey
      in: query
      name: token
      description: Access token for authentication

# WebSocket endpoint documentation (not part of OpenAPI 3.0 spec but documented here)
x-websocket-endpoints:
  cdp-relay:
    summary: CDP Relay WebSocket for Playwright MCP
    description: |
      WebSocket endpoint for Playwright MCP clients to connect and control Chrome extensions through CDP relay.

      This endpoint provides a full CDP interface that bridges commands between Playwright MCP clients and
      Chrome extensions. It handles Browser and Target domain methods locally and forwards other commands
      to the connected extension.

      URL Format:
         ws://localhost:3000/cdp

      No authentication token is required for CDP relay connections. The endpoint expects a Chrome extension
      to be connected to the /extension endpoint to relay commands to.

    parameters: []

    responses:
      101:
        description: WebSocket connection established successfully
      500:
        description: Failed to establish connection

    message-formats:
      cdp-command:
        description: Chrome DevTools Protocol command from CDP client
        schema:
          type: object
          properties:
            id:
              type: integer
              description: Command identifier
            method:
              type: string
              description: CDP method name
              example: 'Runtime.evaluate'
            params:
              type: object
              description: Command parameters
            sessionId:
              type: string
              description: Target session identifier

      cdp-response:
        description: Chrome DevTools Protocol response from extension
        schema:
          type: object
          properties:
            id:
              type: integer
              description: Response identifier matching command
            result:
              type: object
              description: Command result
            error:
              type: object
              description: Error information if command failed

  browser-launch:
    summary: Launch browser instance via WebSocket
    description: |
      Launch a browser instance and establish a WebSocket connection to Chrome DevTools Protocol.

      Two URL formats are supported:

      1. Query String Format:
         ws://localhost:3000?token=<token>&startingUrl=<url>&launch=<launch_args>

      2. Path Format:
         ws://localhost:3000/startingUrl/<url>/token/<token>?launch=<launch_args>

  extension-bridge:
    summary: Chrome Extension Bridge WebSocket
    description: |
      WebSocket endpoint for Chrome extensions to connect and bridge CDP commands through chrome.debugger API.

      This endpoint is compatible with Chrome extensions that use the chrome.debugger API to send CDP commands
      to browser tabs. The service acts as a bridge between the extension and a managed Chrome instance.

      URL Format:
         ws://localhost:3000/extension

      No authentication token is required for extension connections. Each extension connection automatically
      creates a virtual user session with dedicated Chrome instance and user data directory.

    parameters: []

    responses:
      101:
        description: WebSocket connection established successfully
      503:
        description: Maximum concurrent instances limit reached
      500:
        description: Failed to launch Chrome instance

    message-formats:
      connection_info:
        description: Initial message sent by extension to establish connection
        schema:
          type: object
          properties:
            type:
              type: string
              enum: [connection_info]
            sessionId:
              type: string
              description: Session identifier for the extension connection
            targetInfo:
              type: object
              description: Target information from the browser tab
              properties:
                targetId:
                  type: string
                type:
                  type: string
                  enum: [page]
                title:
                  type: string
                url:
                  type: string

      cdp-command:
        description: Chrome DevTools Protocol command from extension
        schema:
          type: object
          properties:
            id:
              type: integer
              description: Command identifier
            method:
              type: string
              description: CDP method name
              example: 'Runtime.evaluate'
            params:
              type: object
              description: Command parameters
            sessionId:
              type: string
              description: Target session identifier

      cdp-response:
        description: Chrome DevTools Protocol response to extension
        schema:
          type: object
          properties:
            id:
              type: integer
              description: Response identifier matching command
            result:
              type: object
              description: Command result
            error:
              type: object
              description: Error information if command failed

  browser-launch:
    summary: Launch browser instance via WebSocket
    description: |
      Launch a browser instance and establish a WebSocket connection to Chrome DevTools Protocol.

      Two URL formats are supported:

      1. Query String Format:
         ws://localhost:3000?token=<token>&startingUrl=<url>&launch=<launch_args>

      2. Path Format:
         ws://localhost:3000/startingUrl/<url>/token/<token>?launch=<launch_args>

    parameters:
      - name: token
        required: true
        description: Access token for authentication
        schema:
          type: string
          example: 'browser-go-token'

      - name: startingUrl
        required: true
        description: URL to open after browser launch (URL-encoded in path format)
        schema:
          type: string
          format: uri
          example: 'https://www.example.com'

      - name: launch
        required: false
        description: JSON format launch parameters
        schema:
          $ref: '#/components/schemas/LaunchParameters'

    responses:
      101:
        description: WebSocket connection established successfully
      400:
        description: Missing required parameters (token or startingUrl)
      403:
        description: Invalid token
      503:
        description: Maximum concurrent instances limit reached
      500:
        description: Failed to launch Chrome instance

security:
  - TokenAuth: []
